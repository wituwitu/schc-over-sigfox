from unittest import TestCase

from Entities.Rule import Rule


class TestRule(TestCase):

    def test_init(self):
        rule_single_byte = Rule("010")
        self.assertEqual(2, rule_single_byte.ID)
        self.assertEqual(3, rule_single_byte.RULE_ID_SIZE)
        self.assertEqual(0, rule_single_byte.T)
        self.assertEqual(2, rule_single_byte.M)
        self.assertEqual(3, rule_single_byte.N)
        self.assertEqual(7, rule_single_byte.WINDOW_SIZE)
        self.assertEqual(3, rule_single_byte.U)
        self.assertEqual(8, rule_single_byte.HEADER_LENGTH)
        self.assertEqual(16, rule_single_byte.ALL1_HEADER_LENGTH)
        self.assertEqual(6, rule_single_byte.ACK_HEADER_LENGTH)
        self.assertEqual(4, rule_single_byte.MAX_WINDOW_NUMBER)
        self.assertEqual(28, rule_single_byte.MAX_FRAGMENT_NUMBER)
        self.assertEqual(88, rule_single_byte.REGULAR_PAYLOAD_LENGTH)
        self.assertEqual(80, rule_single_byte.MAX_ALL1_PAYLOAD_LENGTH)
        self.assertEqual(300, rule_single_byte.MAX_PACKET_SIZE)
        self.assertEqual(0, rule_single_byte.FRG_INDICES["rule_id_idx"])
        self.assertEqual(3, rule_single_byte.FRG_INDICES["dtag_idx"])
        self.assertEqual(3, rule_single_byte.FRG_INDICES["w_idx"])
        self.assertEqual(5, rule_single_byte.FRG_INDICES["fcn_idx"])
        self.assertEqual(8, rule_single_byte.FRG_INDICES["rcs_idx"])
        self.assertEqual(0, rule_single_byte.ACK_INDICES["rule_id_idx"])
        self.assertEqual(3, rule_single_byte.ACK_INDICES["dtag_idx"])
        self.assertEqual(3, rule_single_byte.ACK_INDICES["w_idx"])
        self.assertEqual(5, rule_single_byte.ACK_INDICES["c_idx"])

        rule_two_byte_op_1 = Rule("111010")
        self.assertEqual(8, rule_two_byte_op_1.ID)
        self.assertEqual(6, rule_two_byte_op_1.RULE_ID_SIZE)
        self.assertEqual(0, rule_two_byte_op_1.T)
        self.assertEqual(2, rule_two_byte_op_1.M)
        self.assertEqual(4, rule_two_byte_op_1.N)
        self.assertEqual(12, rule_two_byte_op_1.WINDOW_SIZE)
        self.assertEqual(4, rule_two_byte_op_1.U)
        self.assertEqual(16, rule_two_byte_op_1.HEADER_LENGTH)
        self.assertEqual(16, rule_two_byte_op_1.ALL1_HEADER_LENGTH)
        self.assertEqual(9, rule_two_byte_op_1.ACK_HEADER_LENGTH)
        self.assertEqual(4, rule_two_byte_op_1.MAX_WINDOW_NUMBER)
        self.assertEqual(48, rule_two_byte_op_1.MAX_FRAGMENT_NUMBER)
        self.assertEqual(80, rule_two_byte_op_1.REGULAR_PAYLOAD_LENGTH)
        self.assertEqual(80, rule_two_byte_op_1.MAX_ALL1_PAYLOAD_LENGTH)
        self.assertEqual(480, rule_two_byte_op_1.MAX_PACKET_SIZE)
        self.assertEqual(0, rule_two_byte_op_1.FRG_INDICES["rule_id_idx"])
        self.assertEqual(6, rule_two_byte_op_1.FRG_INDICES["dtag_idx"])
        self.assertEqual(6, rule_two_byte_op_1.FRG_INDICES["w_idx"])
        self.assertEqual(8, rule_two_byte_op_1.FRG_INDICES["fcn_idx"])
        self.assertEqual(12, rule_two_byte_op_1.FRG_INDICES["rcs_idx"])
        self.assertEqual(0, rule_two_byte_op_1.ACK_INDICES["rule_id_idx"])
        self.assertEqual(6, rule_two_byte_op_1.ACK_INDICES["dtag_idx"])
        self.assertEqual(6, rule_two_byte_op_1.ACK_INDICES["w_idx"])
        self.assertEqual(8, rule_two_byte_op_1.ACK_INDICES["c_idx"])

        rule_two_byte_op_2 = Rule("11111110")
        self.assertEqual(17, rule_two_byte_op_2.ID)
        self.assertEqual(8, rule_two_byte_op_2.RULE_ID_SIZE)
        self.assertEqual(0, rule_two_byte_op_2.T)
        self.assertEqual(3, rule_two_byte_op_2.M)
        self.assertEqual(5, rule_two_byte_op_2.N)
        self.assertEqual(31, rule_two_byte_op_2.WINDOW_SIZE)
        self.assertEqual(5, rule_two_byte_op_2.U)
        self.assertEqual(16, rule_two_byte_op_2.HEADER_LENGTH)
        self.assertEqual(24, rule_two_byte_op_2.ALL1_HEADER_LENGTH)
        self.assertEqual(12, rule_two_byte_op_2.ACK_HEADER_LENGTH)
        self.assertEqual(8, rule_two_byte_op_2.MAX_WINDOW_NUMBER)
        self.assertEqual(248, rule_two_byte_op_2.MAX_FRAGMENT_NUMBER)
        self.assertEqual(80, rule_two_byte_op_2.REGULAR_PAYLOAD_LENGTH)
        self.assertEqual(72, rule_two_byte_op_2.MAX_ALL1_PAYLOAD_LENGTH)
        self.assertEqual(2400, rule_two_byte_op_2.MAX_PACKET_SIZE)
        self.assertEqual(0, rule_two_byte_op_2.FRG_INDICES["rule_id_idx"])
        self.assertEqual(8, rule_two_byte_op_2.FRG_INDICES["dtag_idx"])
        self.assertEqual(8, rule_two_byte_op_2.FRG_INDICES["w_idx"])
        self.assertEqual(11, rule_two_byte_op_2.FRG_INDICES["fcn_idx"])
        self.assertEqual(16, rule_two_byte_op_2.FRG_INDICES["rcs_idx"])
        self.assertEqual(0, rule_two_byte_op_2.ACK_INDICES["rule_id_idx"])
        self.assertEqual(8, rule_two_byte_op_2.ACK_INDICES["dtag_idx"])
        self.assertEqual(8, rule_two_byte_op_2.ACK_INDICES["w_idx"])
        self.assertEqual(11, rule_two_byte_op_2.ACK_INDICES["c_idx"])
